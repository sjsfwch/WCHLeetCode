//本题主要是要弄清楚罗马数字的表示法则，没有什么难度
//相同的数字连写，所表示的数等于这些数字相加得到的数，如 Ⅲ=3；
//小的数字在大的数字的右边，所表示的数等于这些数字相加得到的数，如 Ⅷ=8、Ⅻ=12；
//小的数字（限于 Ⅰ、X 和 C）在大的数字的左边，所表示的数等于大数减小数得到的数，如 Ⅳ=4、Ⅸ=9；
//因此我们应从后往前遍历，若当前数字比后一位数字大或等于，则加上当前数字，否则减去
class Solution {
public:
    int romanToInt(string s) {
        unordered_map<char,int> table{{'I',1},{'V',5},{'X',10},{'L',50},{'C',100},{'D',500},{'M',1000}};
        int sum=table[s.back()];
        for(int i=s.length()-2;i>=0;--i){    //注意前面已经处理最后一位了
            if(table[s[i]]>=table[s[i+1]])
                sum+=table[s[i]];
            else
                sum-=table[s[i]];
        }
        return sum;
    }
};
