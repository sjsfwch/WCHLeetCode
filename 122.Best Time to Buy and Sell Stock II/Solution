//本题实际上是求一个数列所有单增区间的最大最小值差之和
//解法1，每天都进行买入卖出，求所有[i-1,i]区间的利润，如果利润大于0，则真的买入，最后将所有利润相加
class Solution {
public:
    int maxProfit(vector<int>& prices) {
        if(prices.empty()) return 0;
        int maxAll=0,Once=0;
        for(int i=1;i<prices.size();i++){
            Once=prices[i]-prices[i-1];
            if(Once>=0)
                maxAll+=Once;
        }
        return maxAll;
    }
};

//减少买卖次数，当价格开始下跌时，才卖出并买入
class Solution {
public:
    int maxProfit(vector<int>& prices) {
        if(prices.empty()) return 0;
        int i,maxAll=0,buy=0;
        for(i=1;i<prices.size();i++){
            if(prices[i]<prices[i-1]){
                maxAll+=prices[i-1]-prices[buy];   //下跌时，昨天卖出，今天买入
                buy=i;
            }
        }
        maxAll+=prices[i-1]-prices[buy];       //处理最后一天
        return maxAll;
    }
};
