//思路跟3Sum没有区别，只有一点改动，需要判断新和是不是离target越来越近
class Solution {
public:
    int threeSumClosest(vector<int>& nums, int target) {
        sort(nums.begin(),nums.end());
        int res=nums[0]+nums[1]+nums[2],n=nums.size();
        for(int i=0;i<n-2;++i){
            if(i>0&&nums[i]==nums[i-1])
                continue;
            int j=i+1,k=n-1;
            while(j<k){
                int temp=nums[i]+nums[j]+nums[k],ressub=abs(res-target),tempsub;
                tempsub=abs(temp-target);
                if(tempsub<ressub)      //更近，res重新赋值
                    res=temp;
                else if(temp<target)  //小于target j++
                    ++j;
                else
                    --k;
            }
        }
        return res;
    }
};
