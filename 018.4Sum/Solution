//跟3sum一模一样的思路，不过是加了一层循环罢了
class Solution {
public:
    vector<vector<int>> fourSum(vector<int>& nums, int target) {
        vector<vector<int>> res;
        int n=nums.size();
        if(n<4) return res;
        sort(nums.begin(),nums.end());
        for(int a=0;a<n-3;++a){
            if(a>0&&nums[a]==nums[a-1])   //开头重复 跳过
                continue;
            for(int b=a+1;b<n-2;++b){
                if(b>a+1&&nums[b]==nums[b-1]) //第二个开头重复 跳过
                    continue;
                int c=b+1,d=n-1;
                while(c<d){      //双向查找
                    int sum=nums[a]+nums[b]+nums[c]+nums[d];
                    if(sum<target) ++c;
                    else if(sum>target) --d;
                    else {
                        res.emplace_back(vector<int>{nums[a],nums[b],nums[c],nums[d]});
                        while(c+1<d&&nums[c]==nums[c+1]) ++c;
                        while(c<d-1&&nums[d]==nums[d+1]) --d;
                        ++c;
                        --d;
                    }
                }
            }
        }
        return res;
    }
};
