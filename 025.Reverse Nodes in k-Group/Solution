//这题本质上不难，使用头插法即可逆序
//但不是全链表头插，要搞清楚几个节点之间的逻辑关系才能做对
//很容易做错，借用讨论区的一个图，看着更直观
/*-1 -> 1 -> 2 -> 3 -> 4 -> 5
*  |    |    |    | 
* pre  cur  nex  tmp

* -1 -> 2 -> 1 -> 3 -> 4 -> 5
*  |         |    |    | 
* pre       cur  nex  tmp

* -1 -> 3 -> 2 -> 1 -> 4 -> 5
*  |              |    |    | 
* pre            cur  nex  tmp*/

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* reverseKGroup(ListNode* head, int k) {
        if (k == 1||!head)
            return head;
        ListNode *prehead = new ListNode(0);
        prehead->next = head;
        ListNode *cur = prehead, *pre = prehead, *nxt, *temp;
        int len = 0;
        while (cur =cur ->next)
            ++len;
        cur = prehead;
        while (len >= k){
            int j = k;
            cur = pre->next;
            nxt = cur->next;
            while (--j > 0){ //将当前节点用头插法后移k-1个位子
                temp = nxt->next;
                nxt->next = pre->next;
                pre->next = nxt;
                cur->next = temp;
                nxt = temp;
            }
            pre = cur;
            len -= k;
        }
        return prehead->next;
    }
};
