//最初的思路是用减法代替除法，不断减去除数，商加1，但是在被除数很大，商很小时，时间复杂度很大
//另辟蹊径，边减边扩大减数，用移位的方法来做,也可以找出不超过dividend的最大divisor的倍数，然后减去，但是效率会低一点
class Solution {
public:
    int divide(int dividend, int divisor) {
        if (!divisor || (dividend == INT_MIN && divisor == -1))
            return INT_MAX;
        int sign=(dividend<0)^(divisor<0)?-1:1;
        long long a=labs(dividend),b=labs(divisor);
        int res=0;
        while(a>=b){
            long long c=b;
            for(int i=0;a>=c;++i,c<<=1){    //边减边移位
                a-=c;
                res+=1<<i;        //商也要移动相同的位数
            }
        }
        return sign==1?res:-res;; 
    }
};
