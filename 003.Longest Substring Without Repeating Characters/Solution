//使用一个unordered_map来保存和更新每个字符的位置信息，并设置一个start变量来记录起点位置
class Solution {
public:
    int lengthOfLongestSubstring(string s) {
        int maxlen=0,start=-1;
        unordered_map<char,int> table;
        for(int i=0;i<s.size();++i){
            if(table.count(s[i]))        //遇到重复元素，更新start
                start=max(start,table[s[i]]);    //这是防止start本来就比上一个出现s[i]的位置大 如abcba，第二次遇见a时start为3，不能更新为0
            table[s[i]]=i;          //更新字符位置信息
            maxlen=max(maxlen,i-start);      //计算最大长度
        }
        return maxlen;
    }
};
